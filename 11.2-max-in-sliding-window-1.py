"""
Максимум в скользящем окне
Найти максимум в каждом окне размера m данного массива чисел
A[1 : : : n].
Вход. Массив чисел A[1 : : : n] и число 1 <= m <= n.
Выход. Максимум подмассива A[i : : : i +m-1] для всех 1 <= i <= n - m + 1.
Наивный способ решить
данную задачу — честно про-
сканировать каждое окно
и найти в нём максимум. Время
работы такого алгоритма —
O(nm). Ваша задача — реализовать алгоритм со временем работы
O(n).
Формат входа. Первая строка входа содержит число n, вторая—мас-
сив A[1 : : : n], третья — число m.
Формат выхода. n - m + 1 максимумов, разделённых пробелами.
Ограничения. 1 <= n <= 10^5, 1 <= m <= n, 0 <= A[i] <= 10^5 для всех 1 <= i <= n.

Пример.
Вход:
8
2 7 3 1 5 2 6 2
4
Выход:
7 7 5 6 6

Пример.
Вход:
3
2 1 5
1
Выход:
2 1 5

Пример.
Вход:
3
2 3 9
3
Выход:
9
"""
import itertools
from collections import deque


def main():
    n = int(input())
    a = list(zip((int(num) for num in input().split()), itertools.count()))
    m = int(input())
    q = deque()
    maximum = a[0]
    for i in range(n):
        if maximum[1] < i + 1 - m:
            maximum = q.popleft() if q else a[i]
        if a[i] >= maximum:
            q.clear()
            maximum = a[i]
        else:
            while q and q[-1][0] <= a[i][0]:
                q.pop()
            q.append(a[i])
        if i >= m - 1:
            print(maximum[0], end=' ')


if __name__ == '__main__':
    main()
